#!/usr/bin/env node

var program = require('commander');
var chokidar = require('chokidar');
var path = require('path');
var exec = require('child_process').exec;

var runner = require('./test-runner');
var last = function(arr) { return arr[arr.length - 1]; };

program
  .version(require('../package.json').version)
  .option('-w, --watch', 'Run tests on change')
  .option('-f, --filter [filter]', 'Only runs specs that match the given string')
  .parse(process.argv);

if (program.watch) {
  (function() {
    console.log('Watching ReactHardware\n');
    const base = path.join(__dirname, '..', 'src', '**/*.js');
    // prevent jasmine from killing the process
    process.exit = function() {};

    var watcher = chokidar.watch(base, {persistent: true});

    watcher.on('change', function(localPath, stats) {
      var moduleName = last(localPath.split('/'))
        .replace('.js', '')
        .replace('-test', '');

      if (moduleName === 'index') {
        moduleName = 'ReactHardware';
      }

      console.log('Rerunning filter on %s', moduleName);

      exec(
        path.join(__dirname, 'test') + ' ' +
        '--filter ' + moduleName, 
        function(error, stdout, stderr) {
          console.log(stdout);
          console.log(stderr);
          if (error !== null) {
            // meh errors
            // console.error(error);
          }
        }
      );
    });
  })();
} else {
  console.log(program.filter);
  runner.execute(undefined, program.filter);
}

